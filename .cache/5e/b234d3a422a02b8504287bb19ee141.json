{"id":"ejercicios/closures.html","dependencies":[{"name":"C:\\Progra\\Profesional_JS\\package.json","includedInParent":true,"mtime":1603398599269}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Closures</title>\r\n</head>\r\n<body>\r\n    <a href=\"/ejercicios/\">Go back</a>\r\n        <p><em>Abre la consola</em></p>\r\n    \r\n        <script>//Closures\n//printColor\n//esto es un IIFE\n// (function() {\n// let color = 'green';\n// function printColor() {\n//     console.log(color);\n// }\n// printColor();\n// })();\n//Funciones que regresan funciones\nfunction makeColorPrinter(color) {\n  let colorMessage = `The color is ${color}`;\n  return function () {\n    console.log(colorMessage);\n  };\n}\n\nlet greenColorPrinter = makeColorPrinter(\"green\"); //se colocan parentesis porque lo que retorna es otra funcion\n//y se debe ejecutar\n\nconsole.log(greenColorPrinter()); //variables privadas\n// const counter = {\n//     count: 3\n// }\n// console.log(counter.count);\n\nfunction makeCounter(n) {\n  let count = n;\n  return {\n    increase: function () {\n      count = count + 1;\n    },\n    decrease: function () {\n      count = count - 1;\n    },\n    getCount: function () {\n      return count;\n    }\n  };\n}\n\nlet counter = makeCounter(7);\nconsole.log(\"The count is: \", counter.getCount());\ncounter.increase();\nconsole.log(\"The count is: \", counter.getCount());\ncounter.decrease();\ncounter.decrease();\ncounter.decrease();\ncounter.decrease();\nconsole.log(\"The count is: \", counter.getCount());</script>\r\n</body>\r\n</html>"},"sourceMaps":null,"error":null,"hash":"d2af3fc5330037a5caa20e0b51641346","cacheData":{"env":{}}}